name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  TF_VERSION: 1.5.0

jobs:
  terraform-validate:
    name: Terraform Validate
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}
    
    - name: Terraform Init
      run: terraform init -backend=false
      working-directory: terraform
    
    - name: Terraform Validate
      run: terraform validate
      working-directory: terraform

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Run basic security checks
      run: |
        echo "Checking for sensitive files..."
        ! find . -name "*.pem" -o -name "*.key" -o -name "*secret*" | grep -v .git
        echo "Security check passed"

  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    needs: [terraform-validate]
    if: github.event_name == 'pull_request' && false  # Disabled - requires AWS credentials
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}
    
    - name: Terraform Init
      run: terraform init -backend=false
      working-directory: terraform
    
    - name: Terraform Plan (Dry Run)
      run: terraform plan -var-file="environments/dev/terraform.tfvars" -no-color
      working-directory: terraform

  docs-check:
    name: Documentation Check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Check documentation files
      run: |
        echo "Checking required documentation..."
        [ -f README.md ] && echo "✓ README.md found"
        [ -f CHANGELOG.md ] && echo "✓ CHANGELOG.md found"
        [ -f CODE_OF_CONDUCT.md ] && echo "✓ CODE_OF_CONDUCT.md found"
        echo "Documentation check completed"