name: 'Terraform CI/CD'

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  pull-requests: write

jobs:
  terraform:
    name: 'Terraform Validation'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.5.0"

    - name: Terraform Format Check
      run: terraform fmt -check -recursive

    - name: Terraform Init
      run: terraform init -backend=false

    - name: Terraform Validate
      run: terraform validate

    - name: Terraform Plan Syntax Check
      run: |
        for env in dev staging prod; do
          echo "Checking $env environment..."
          terraform plan -var-file="environments/$env/terraform.tfvars" -no-color -input=false -refresh=false
        done
      continue-on-error: false

  security:
    name: 'Security Scan'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Run Checkov
      uses: bridgecrewio/checkov-action@master
      with:
        directory: ./terraform
        quiet: true
        soft_fail: true
        framework: terraform
        skip_check: CKV_AWS_79,CKV_AWS_23

  lint:
    name: 'Code Quality'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Lint Shell Scripts
      uses: ludeeus/action-shellcheck@master
      with:
        scandir: './scripts'
        
    - name: Lint YAML
      uses: ibiqlik/action-yamllint@v3
      with:
        file_or_dir: '.github/workflows/'
        
    - name: Validate Markdown
      uses: articulate/actions-markdownlint@v1
      with:
        config: .markdownlint.json
        files: '*.md docs/*.md'
      continue-on-error: true